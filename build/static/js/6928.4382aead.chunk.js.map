{"version":3,"file":"static/js/6928.4382aead.chunk.js","mappings":"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","sources":["pages/shop/ShopListTwoColumn.js","components/product/ShopTopFilter.js","components/product/ShopTopActionFilter.js","wrappers/product/ShopTopbarFilter.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\"; \r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopTopbarFilter from \"../../wrappers/product/ShopTopbarFilter\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n\r\nconst ShopListTwoColumn = ({ location }) => {\r\n  const [layout, setLayout] = useState(\"list two-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 16;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = layout => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Shop Page\"\r\n        description=\"Shop page of Stickerify\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb \r\n          pages={[\r\n            {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            {label: \"Shop\", path: process.env.PUBLIC_URL + pathname }\r\n          ]} \r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar filter */}\r\n                <ShopTopbarFilter\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopListTwoColumn;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n  setActiveSort\r\n} from \"../../helpers/product\";\r\n\r\nconst ShopTopFilter = ({ products, getSortParams }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n\r\n  return (\r\n    <div className=\"product-filter-wrapper\" id=\"product-filter-wrapper\">\r\n      <div className=\"product-filter-wrapper__inner\">\r\n        <div className=\"row\">\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Categories</h5>\r\n              {uniqueCategories ? (\r\n                <ul>\r\n                  {uniqueCategories.map((category, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"category\", category);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {category}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No categories found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Color</h5>\r\n              {uniqueColors ? (\r\n                <ul>\r\n                  {uniqueColors.map((color, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"color\", color);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {color}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No colors found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Size</h5>\r\n              {uniqueSizes ? (\r\n                <ul>\r\n                  {uniqueSizes.map((size, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          className=\"text-uppercase\"\r\n                          onClick={e => {\r\n                            getSortParams(\"size\", size);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {size}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No sizes found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter product-filter--tag\">\r\n              <h5>Tag</h5>\r\n              {uniqueTags ? (\r\n                <ul>\r\n                  {uniqueTags.map((tag, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"tag\", tag);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {tag}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No tags found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopFilter.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopTopFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopFilter from \"./ShopTopFilter\";\r\nimport { toggleShopTopFilter } from \"../../helpers/product\";\r\n\r\nconst ShopTopActionFilter = ({\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"shop-top-bar mb-35\">\r\n        <div className=\"select-shoing-wrap\">\r\n          <div className=\"shop-select\">\r\n            <select\r\n              onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n            >\r\n              <option value=\"default\">Default</option>\r\n              <option value=\"priceHighToLow\">Price - High to Low</option>\r\n              <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n            </select>\r\n          </div>\r\n          <p>\r\n            Showing {sortedProductCount} of {productCount} result\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"filter-active\">\r\n          <button onClick={e => toggleShopTopFilter(e)}>\r\n            <i className=\"fa fa-plus\"></i> filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* shop top filter */}\r\n      <ShopTopFilter products={products} getSortParams={getSortParams} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopActionFilter.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopActionFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopActionFilter\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n        products={products}\r\n        getSortParams={getSortParams}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n"],"names":["_ref","location","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","products","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","_jsxs","Fragment","children","_jsx","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","className","ShopTopbarFilter","getLayout","getFilterSortParams","productCount","length","sortedProductCount","getSortParams","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags","id","map","category","key","onClick","e","setActiveSort","color","size","tag","onChange","target","value","toggleShopTopFilter","ShopTopFilter","ShopTopActionFilter"],"sourceRoot":""}