{"version":3,"file":"static/js/3110.966bb5c5.chunk.js","mappings":"kKA0BA,UApBiB,WAKf,OAHFA,EAAAA,EAAAA,YAAU,WACNC,SAASC,MAAQ,qBACnB,GAAG,KAEDC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,OAAQ,QACRC,MAAO,QACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,UACfC,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0DAGT,C,uDCxBA,IAAIE,EAAS,2BACTC,EAAe,4CACfC,EAA0B,mJA2C1BC,EAAgB,KAChBC,EAAa,SAAoBC,GAEnC,OAAsB,OAAlBF,IAIJA,EAAgB,IAAIG,SAAQ,SAAUC,EAASC,GAC7C,GAAsB,qBAAXC,QAA8C,qBAAbrB,SAW5C,GAJIqB,OAAOC,QAAUL,GACnBM,QAAQC,KAAKV,GAGXO,OAAOC,OACTH,EAAQE,OAAOC,aAIjB,IACE,IAAIG,EAnEO,WAGf,IAFA,IAAIC,EAAU1B,SAAS2B,iBAAiB,gBAAiBC,OAAOhB,EAAQ,OAE/DiB,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAAK,CACvC,IAAIJ,EAASC,EAAQG,GAErB,GAAKhB,EAAakB,KAAKN,EAAOO,KAI9B,OAAOP,CACT,CAEA,OAAO,IACT,CAqDmBQ,GAETR,GAAUR,EACZM,QAAQC,KAAKV,GACHW,IACVA,EAxDW,SAAsBR,GACvC,IAAIiB,EAAcjB,IAAWA,EAAOkB,qBAAuB,8BAAgC,GACvFV,EAASzB,SAASoC,cAAc,UACpCX,EAAOO,IAAM,GAAGJ,OAAOhB,GAAQgB,OAAOM,GACtC,IAAIG,EAAarC,SAASsC,MAAQtC,SAASuC,KAE3C,IAAKF,EACH,MAAM,IAAIG,MAAM,+EAIlB,OADAH,EAAWI,YAAYhB,GAChBA,CACT,CA4CiBiB,CAAazB,IAGxBQ,EAAOkB,iBAAiB,QAAQ,WAC1BtB,OAAOC,OACTH,EAAQE,OAAOC,QAEfF,EAAO,IAAIoB,MAAM,2BAErB,IACAf,EAAOkB,iBAAiB,SAAS,WAC/BvB,EAAO,IAAIoB,MAAM,4BACnB,GACF,CAAE,MAAOI,GAEP,YADAxB,EAAOwB,EAET,MAnCEzB,EAAQ,KAoCZ,KA3CSJ,CA6CX,EAaI8B,EAAkB3B,QAAQC,UAAU2B,MAAK,WAC3C,OAAO9B,EAAW,KACpB,IACI+B,GAAa,EACjBF,EAAuB,OAAE,SAAUG,GAC5BD,GACHxB,QAAQC,KAAKwB,EAEjB,IACA,IAAIC,EAAa,WACf,IAAK,IAAIC,EAAOC,UAAUrB,OAAQsB,EAAO,IAAIC,MAAMH,GAAOI,EAAO,EAAGA,EAAOJ,EAAMI,IAC/EF,EAAKE,GAAQH,UAAUG,GAGzBP,GAAa,EACb,IAAIQ,EAAYC,KAAKC,MACrB,OAAOZ,EAAgBC,MAAK,SAAUY,GACpC,OA7Ba,SAAoBA,EAAaN,EAAMG,GACtD,GAAoB,OAAhBG,EACF,OAAO,KAGT,IAAIC,EAASD,EAAYE,WAAMC,EAAWT,GAE1C,OArEoB,SAAyBO,EAAQJ,GAChDI,GAAWA,EAAOG,kBAIvBH,EAAOG,iBAAiB,CACtBC,KAAM,YACNC,QAAS,SACTT,UAAWA,GAEf,CA0DEU,CAAgBN,EAAQJ,GACjBI,CACT,CAqBWO,CAAWR,EAAaN,EAAMG,EACvC,GACF,C","sources":["pages/other/stripe-fail.js","../node_modules/@stripe/stripe-js/dist/stripe.esm.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from 'axios'\nimport { loadStripe } from '@stripe/stripe-js';\n\n\nconst Checkout = () => {\n\nuseEffect(() => {\n    document.title = 'Payment Successful!';\n  }, []);\n  return (\n    <div style={{\n      height: '100vh',\n      width: '100vw',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column'\n    }}>\n      <h1>Payment Failed... :(</h1>\n      <p>Your Payment Failed, You can now close this window </p>\n    </div>\n  );\n};\n\nexport default Checkout;\n","var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.54.2\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n// own script injection.\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now();\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n"],"names":["useEffect","document","title","_jsxs","style","height","width","display","justifyContent","alignItems","flexDirection","children","_jsx","V3_URL","V3_URL_REGEX","EXISTING_SCRIPT_MESSAGE","stripePromise","loadScript","params","Promise","resolve","reject","window","Stripe","console","warn","script","scripts","querySelectorAll","concat","i","length","test","src","findScript","queryString","advancedFraudSignals","createElement","headOrBody","head","body","Error","appendChild","injectScript","addEventListener","error","stripePromise$1","then","loadCalled","err","loadStripe","_len","arguments","args","Array","_key","startTime","Date","now","maybeStripe","stripe","apply","undefined","_registerWrapper","name","version","registerWrapper","initStripe"],"sourceRoot":""}